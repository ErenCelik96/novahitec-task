{"version":3,"sources":["components/FilesComp.js","App.js","index.js"],"names":["FilesComp","useState","firstImage","setFirstImage","secondImage","setSecondImage","file","setFile","classes","makeStyles","theme","createStyles","previewChip","minWidth","maxWidth","useStyles","Box","sx","width","height","borderRadius","display","flexDirection","justifyContent","alignItems","backgroundImage","htmlFor","Input","accept","id","filesLimit","onChange","type","style","marginBottom","bgcolor","showPreviews","showPreviewsInDropzone","useChipsForPreview","previewGridProps","container","spacing","direction","previewChipProps","root","previewText","files","length","Button","variant","endIcon","disabled","color","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSA4EeA,MApEf,WAAqB,MAGiBC,oBAAS,GAH1B,mBAGZC,EAHY,KAGAC,EAHA,OAKmBF,oBAAS,GAL5B,mBAKZG,EALY,KAKCC,EALD,OAOKJ,oBAAS,GAPd,mBAOZK,EAPY,KAONC,EAPM,KAiBbC,EANYC,aAAW,SAAAC,GAAK,OAAIC,YAAa,CACjDC,YAAa,CACXC,SAAU,IACVC,SAAU,SAGEC,GAEhB,OACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,OACPC,OAAQ,OACRC,aAAc,GACdC,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBC,WAAY,SACZC,gBAAiB,qHATrB,UAWE,wBAAOC,QAAQ,wBAAf,UACE,mDAAqB,sCAArB,wBAAuD,uBACvD,cAACC,EAAA,EAAD,CAAOC,OAAO,UAAUC,GAAG,wBAAwBC,WAAY,EAAGC,SAAU,kBAAM5B,GAAc,IAAO6B,KAAK,YAE9G,wBAAON,QAAQ,yBAAf,UACE,mDAAqB,qCAArB,wBAAsD,uBACtD,cAACC,EAAA,EAAD,CAAOC,OAAO,UAAUC,GAAG,yBAAyBC,WAAY,EAAGC,SAAU,kBAAM1B,GAAe,IAAO2B,KAAK,YAEhH,oBAAGC,MAAO,CAAEC,aAAc,SAA1B,gCAAwD,2CAAxD,OACA,cAAClB,EAAA,EAAD,CAAKC,GAAI,CACPC,MAAO,OACPC,OAAQ,OACRgB,QAAS,SAHX,SAKE,cAAC,IAAD,CACEC,cAAc,EACdC,wBAAwB,EACxBC,oBAAkB,EAClBC,iBAAkB,CAAEC,UAAW,CAAEC,QAAS,EAAGC,UAAW,QACxDC,iBAAkB,CAAEnC,QAAS,CAAEoC,KAAMpC,EAAQI,cAC7CiC,YAAY,iBACZf,WAAY,GACZC,SAAU,SAACe,GAAD,OAA4B,IAAjBA,EAAMC,OAAexC,GAAQ,GAASA,GAAQ,QAGvE,cAACyC,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAS,cAAC,IAAD,IACTC,WAAU7C,GAAQF,GAAeF,GACjCe,GAAI,CAAEkB,QAAS,UAAWiB,MAAO,SAJnC,sBCpDSC,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,uDACA,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ae59a2f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Input from '@mui/material/Input';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nfunction FilesComp() {\r\n\r\n  //first input\r\n  const [firstImage, setFirstImage] = useState(false);\r\n  //second input\r\n  const [secondImage, setSecondImage] = useState(false);\r\n  //dropzone\r\n  const [file, setFile] = useState(false);\r\n\r\n\r\n  //DropZoneArea style\r\n  const useStyles = makeStyles(theme => createStyles({\r\n    previewChip: {\r\n      minWidth: 160,\r\n      maxWidth: 150\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '50vw',\r\n        height: '75vh',\r\n        borderRadius: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        backgroundImage: 'linear-gradient(45deg, rgba(245, 245, 245, 0.7) 30%, rgba(183,177,165,0.5) 30% 60%, rgba(245, 245, 245, 0.7) 60%)'\r\n      }}>\r\n      <label htmlFor=\"contained-button-file\">\r\n        <p>Please upload the <b>front</b> of your passport.</p><br />\r\n        <Input accept=\"image/*\" id=\"contained-button-file\" filesLimit={1} onChange={() => setFirstImage(true)} type=\"file\" />\r\n      </label>\r\n      <label htmlFor=\"contained-button-file1\">\r\n        <p>Please upload the <b>back</b> of your passport.</p><br />\r\n        <Input accept=\"image/*\" id=\"contained-button-file1\" filesLimit={1} onChange={() => setSecondImage(true)} type=\"file\" />\r\n      </label>\r\n      <p style={{ marginBottom: '-40px' }}>Please upload your <b>payslip(s)</b>.</p>\r\n      <Box sx={{\r\n        width: '20vw',\r\n        height: '25vh',\r\n        bgcolor: 'white'\r\n      }}>\r\n        <DropzoneArea\r\n          showPreviews={false}\r\n          showPreviewsInDropzone={true}\r\n          useChipsForPreview\r\n          previewGridProps={{ container: { spacing: 1, direction: 'row' } }}\r\n          previewChipProps={{ classes: { root: classes.previewChip } }}\r\n          previewText=\"Selected files\"\r\n          filesLimit={20}\r\n          onChange={(files) => files.length === 0 ? setFile(false) : setFile(true)} //Here we check the length of the array inside the dropzone\r\n        />\r\n      </Box>\r\n      <Button\r\n        variant=\"contained\"\r\n        endIcon={<SendIcon />}\r\n        disabled={file && secondImage && firstImage ? false : true} //Here we decide whether the button is active or not\r\n        sx={{ bgcolor: '#F5F5F5', color: 'black' }}\r\n      >\r\n        Send\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FilesComp;\r\n","import './App.css';\r\nimport FilesComp from './components/FilesComp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>loan application page</h1>\r\n      <FilesComp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}